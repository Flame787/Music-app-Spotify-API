@import "base/reset";
@import "base/colors";
@import "base/typography";
@import "abstracts/mixins";
@import "abstracts/themes";

// THEME MODULES:

// On each loop, assign values to $theme and $map:
// Module-name - can be any html-element: div, navbar, card, button etc - a container whose style we want to change.
// These containers should also be targeted in JS with each-loop to remove previous theme and add newly selected theme.
// A class with theme number will be added to the element in html :<div class="theme1 navbar">...</div>
// The & refers to parent selectors, and placing it after .#{$theme} tells Sass to output any parent selectors after the theme name:

// &.#{$theme} - current element
// .#{$theme} & { - parent element gets the class

// PAGE-BACKGROUND-IMAGES:

body {
  @each $theme, $background in $backgrounds {
    &.#{$theme} {
      background-image: $background !important;
    }
  }
}

// FONT-COLORS AND TEXT-SHADOWS:

body {
  @each $theme, $properties in $fontColors {
    &.#{$theme} {
      color: map-get($properties, color) !important;
      text-shadow: map-get($properties, text-shadow) !important;
    }
  }
}

// BUTTONS - NAVIGATION, THEME, SUBMIT/ADD-BUTTONS:

.theme-button {
  @each $theme, $map in $themes {
    .#{$theme} & {
      background-color: map-get($map, background-color);
      background-image: map-get($map, background-image);
      color: map-get($map, color);
      border: map-get($map, border);
      box-shadow: map-get($map, box-shadow);
    }
  }
}

// Apply 1 scss-module to several classes:
.nav-button,
.favorite-button,
#theme_color,
.dropdown-menu,
.show-more-button,
.play-button {
  @extend .theme-button;
}

//Ancor (Nav-) buttons have the same color like Select/Add buttons:

button a {
  @each $theme, $map in $themes {
    .#{$theme} & {
      color: map-get($map, color);
    }
  }
}

// REMOVE-BUTTONS (darker gradients):

.remove-button {
  @each $theme, $map in $themes2 {
    .#{$theme} & {
      background-color: map-get($map, background-color);
      background-image: map-get($map, background-image);
      color: map-get($map, color);
      border: map-get($map, border);
      box-shadow: map-get($map, box-shadow);
    }
  }
}

// FORMS:

.form-theme {
  @each $formTheme, $map in $formThemes {
    .#{$formTheme} & {
      background: map-get($map, background);
      background-color: map-get($map, background-color);
      color: map-get($map, color);
      text-shadow: map-get($map, text-shadow);
      box-shadow: map-get($map, box-shadow);
    }
  }
}

// HEADERS (UPPER NAVIGATION DIV):

.header-style {
  @each $headerTheme, $map in $headerThemes {
    .#{$headerTheme} & {
      background: map-get($map, background);
    }
  }
}

// INPUT-FIELDS - background-colors and font-colors:

.input-color {
  @each $inputColor, $map in $inputColors {
    .#{$inputColor} & {
      background-color: map-get($map, background-color);
      color: map-get($map, color);
    }
  }
}

// REPEATING CATEGORIES-CLASS ".THIN" (artist, song, album, rate), added in JS:

.thin {
  @each $thinColor, $map in $thinColors {
    .#{$thinColor} & {
      color: map-get($map, color);
    }
  }
}

.thin2 {
  @each $thinColor, $map in $thinColors {
    .#{$thinColor} & {
      color: map-get($map, color);
    }
  }
}

///////////////////////////// DEFAULT STYLES, INDEPENDENT OF SELECTED THEMES: /////////////////////////

body {
  font-family: $poppins;
  background-repeat: repeat;
  background-size: 100%;
}

h1 {
  font-size: 4rem;
}

h1,
h3 {
  font-family: $inter;
}

// Navbar (header id="navigation" class="red"):

.red {
  @include flex-container();
  height: 120px;
}

// all children elements of header (which has class .red): ancor-buttons & dropdown-button:
.red > * {
  padding: 0 5px 5px;
}

#navbar {
  flex-basis: 80%;
}

#navigation {
  @include navigation-position();
  @include navigation-design();
}

#top-icon {
  flex-basis: 5%;
}

#nav-title {
  font-family: $poppins !important;

  color: $fontColor2;
  @include nav-title();
  flex-basis: 12%;
}

.purple,
.purple-nav {
  color: rgb(164, 52, 84);
  letter-spacing: 0.2px;
  text-shadow: 2px 2px 2px rgb(244, 243, 228);
}

.blue,
.blue-nav {
  color: rgb(38, 101, 174);
  letter-spacing: 0.2px;
  text-shadow: 2px 2px 2px rgb(244, 243, 228);
}

.purple-nav {
  text-shadow: 1px 2px 2px rgb(244, 243, 228);
}

.blue-nav {
  text-shadow: 1px 2px 2px rgb(244, 243, 228);
}

#nav-list {
  list-style-type: none;
  text-align: right;

  button {
    @include button-style();
    @include navbar-button();

    a {
      @include nav-ancor-text();
      text-decoration: none;

      &:hover {
        @include button-hover();
      }
    }
  }
}

.dropdown-menu {
  display: none; /* hide dropdown-menu */
  position: absolute;
  top: 70%; /* Sets element right beneath the button - earlier it was 100% but this wasn't ok, it sat too low beneath the button */
  right: 20px;
  background-color: rgba(195, 193, 193, 0.505);
  border: 1px solid #ccc;
  border-radius: 10px;
  // width: 50%;
  list-style: none;
  padding: 0;
  margin: 0;
  z-index: 1000; /* shows up in front of other elements */
  width: 130px;
}

/* Dropdown-menu when shown */
.dropdown-menu.show {
  display: block;
}

.dropdown-menu li {
  padding: 2px;
  cursor: pointer;
  transition: background-color 0.2s;
  font-size: 1rem;
  text-shadow: none;
}

.dropdown-menu li:hover {
  background-color: #bebdbd;
}

select {
  @include button-style();
  @include navbar-button();
  @include submit-button();

  display: inline-block;
  border-top-left-radius: 40px;
  border-bottom-right-radius: 40px;
  padding: 5px 20px;
  color: $fontColor1;
  font-weight: bold;
  font-family: $sans-serif1;
  text-align: center;
  width: 18%;

  &:hover {
    @include button-hover();
  }
}

select {
  option {
    color: $fontColor1;
  }
}

.option {
  font-size: 0.9rem;
  background-color: $inputColor1;
  border-radius: 45px;
}

#theme-color option {
  opacity: 0.8 !important;
}

#app-icon {
  text-align: center;
}

// form:

.flex-container {
  @include flex-container();
  align-items: center;
  width: 80%;
  margin: 1% 10%;
  height: 20%;
}
/* if height in vh: 20vh is used, it doesn't scale well, if too many elements added to the list 
(lower flex-container), they won't fit anymore to a fixed vh-height, 
but will be overlapping into upper flex-container.
Better to use percentage for containers inside the page, then the page will grow larger if needed 
- scrollable, as long as alements are added to the list, but they will always fit into their container.
 */

.flex-item {
  margin: 3%;
}

#first-container {
  border-radius: 15px;
}

#first-input,
#second-input,
#third-input {
  margin: 1% 3%;
  flex-basis: 0%;
}

.form {
  @include form-design();
}

#search-form {
  width: 40%; // other flex-containers with results have width: 80%, but Search & Audio player have to be thinner
  margin: 2% auto; // centering Search-form in the middle of the page
}

// to have div transparent, but text inside of it fully visible - rgba with transparent effect:
// background: radial-gradient(at 25% 75%, #5d0e41, rgba(77, 148, 255, 0));

// checkbox for artist/album/songs:
input[type="checkbox"] {
  transform: scale(1.5); // makes checkbox bigger
  vertical-align: middle; // aligns checkbox in the middle of the text in label, and not too high up
  margin-right: 5px; /* gap between checkbox and label */
}

.visible-title1,
.visible-title2 {
  padding: 0.1%;
}

#music-player {
  margin-top: 1%;
  width: 90%;
  height: 40%;
  // border: 1px solid white;
}

#music-wrapper {
  margin-top: 5%;
}

audio::-webkit-media-controls-panel {
  background-color: #7b7d809f;
}

audio::-webkit-media-controls-mute-button {
  background-color: #f6f8f9;
  border-radius: 50%;
}

audio::-webkit-media-controls-play-button:hover {
  background-color: #f6f8f9;
  border-radius: 50%;
}

audio::-webkit-media-controls-current-time-display {
  color: #fff;
}

audio::-webkit-media-controls-timeline {
  background-color: #c5c5c5;
  border-radius: 25px;
  margin-left: 10px;
  margin-right: 10px;
}

audio::-webkit-media-controls-volume-slider {
  background-color: #c5c5c5;
  border-radius: 25px;
  padding-left: 8px;
  padding-right: 8px;
}

.item-card,
.item-card2,
.item-card3 {
  // max-width: 40%;
  margin: auto;
  border-radius: 30px;
  margin-bottom: 50px;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: center;
  align-items: center;
  transition: transform 0.3s ease;
  font-family: "Poppins", sans-serif !important;
  border-top: 1px solid rgba(128, 128, 128, 0.485);
  border-left: 1px solid rgba(128, 128, 128, 0.478);
  gap: 5%;
}

.item-card1 {
  max-width: 40%;
}

.item-card2 {
  max-width: 70%;
  font-size: smaller;
  gap: 10%;
}

.favorite-message {
  font-size: 1rem;
  margin-top: 0px;
  width: 44%;
  text-align: center;
  margin: 8% auto 3%;
}

.item-card3,
.favorite-message {
  max-width: 90%;
  font-size: smaller;
  gap: 5%;
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
}

.button50 {
  width: 44%;
}

.item-card:hover {
  transform: translateY(-10px);
}

h3 {
  font-size: 2.2rem;
}

input {
  @include input-field();

  &:hover {
    background-color: $hoverColor1;
    color: $textShadowColor1;
  }
}

button,
select {
  position: relative;
  overflow: hidden;

  border-radius: 45px;

  transition: transform 0.4s ease-in-out;
  // Elements button & select have relative positioning, which enables that pseudo-element ::after positions inside them with 'position: absolute'
  // overflow: hidden: enables that eny content which is outside of element border stays hidden - important for 'shine' efect because it passes over the element border.
  // transition: enables transformation on hover.

  // additional effect-element, coming 'after' the button (just a shadow/shine):
  &::after {
    content: "";
    position: absolute;
    top: 0;
    left: -80%;
    width: 200%;
    height: 100%;
    // background: rgba(255, 255, 255, 0.289);
    // transform: skewX(-20deg);
    // transition: left 0.1s ease-in-out;

    background: linear-gradient(
      to top,
      rgba(229, 172, 142, 0),
      rgba(255, 255, 255, 0.244) 50%,
      rgba(229, 172, 142, 0)
    );
    transform: rotateZ(320deg) translate(0em, 7.5em);
  }

  // content: '': creatse an empty ::after pseudo-element, to which we can provide some style.
  // position: absolute: Pseudo-element is positioned absolutely inside the parent element which is positioned relatively (button or select).
  // So it may move freely inside the boderd of teh parent element.
  // top: 0, left: -100%: ::after element starts aoutside of the left side of parent element
  // width: 200%, height: 100%: Pseudo-element has double the element-width, so it may create effect of crossing over the whole element.
  // background: linear-gradient: defines gradient with light white line in the middle (rgba(255, 255, 255, 0.5)), simulating the shine.
  // transform: rotateZ(60deg) translate(-5em, 7.5em): Pseudo-element rotates for 60 degrees and moves, crosses diagnoally over the element.

  &:hover::after {
    animation: shine 1s forwards;
  }
}

// &:hover::after: on mouse-hover - the animation for pseudo-element ::after is activated.
// animation: shine 1s forwards: Animation named 'shine', lasts 1 sec and moves the ::after element across the button.

@keyframes shine {
  100% {
    transform: rotateZ(320deg) translate(1em, -9em);
  }
}

.input-button:hover {
  background-color: $hoverColor1;
  text-shadow: none;
}

p {
  padding: 2% 0;
}

/* input field for a numeric rate (smaller than others) */
#review {
  width: 7rem;
}

// submit-button:
button {
  @include submit-button();
  @include button-style();

  &:hover {
    @include button-hover();
  }
}

ul {
  list-style-type: none;
  padding-inline-start: 0;
  margin-top: 2%;
}

li {
  flex-basis: 80%;
}

.theme-select-btn {
  width: 16% !important;
}

.thin {
  color: rgba(130, 129, 129, 0.853);
  font-family: "Poppins", sans-serif !important;
  font-size: smaller;
}

.album,
.artist,
.song,
.rating,
.time {
  font-size: smaller;
}

.whiteParagraph {
  @include list-paragraph();
}

.blackParagraph {
  color: $inputColor1;
  @include list-paragraph();
}

#results {
  margin: 2% auto;
}

hr {
  width: 70%;
}

.favorite-button,
.remove-button {
  @include button-style();
  @include fav-and-remove-button();

  &:hover {
    @include button-hover();
  }
}

.removeButtonWater {
  background-color: $inputColor1;
}

#new-title {
  display: none;
}
@include columns();

#search-all-input {
  width: 50% !important;
}

.flex-item-big {
  flex-basis: 80%;
  margin-bottom: 0;
  margin-top: 0;
}

.flex-item {
  margin-top: 0;
}

// API-generated results:

#search-results:focus {
  outline: none;
}

// if quiry is smaller than 1, or empty:
.warning-message {
  color: red;
  font-size: 1rem;
  margin-top: 3px;
}

.result-category {
  width: 100%;
  margin: 2% auto 3%;
}

.result-image {
  border-radius: 25px;
  width: 250px;
  height: 250px;
  box-shadow: 2px 2px 2px rgb(60, 60, 60);
  &:hover {
    cursor: pointer;
  }
}

.result-image-playing {
  border-radius: 45px;
  width: 250px;
  height: 250px;
  box-shadow: 2px 2px 2px rgb(60, 60, 60);
}

.li-item-style {
  padding: 0 5% 2%;
  font-size: 1.1rem;
}

.flex-container-ol {
  width: 100%;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-around;
  align-content: center;
}

.flex-container-ol .result-flex-item {
  flex-basis: 30%;
  // margin-left: 5%;
  // margin-right: 5%;
}

.result-item-name {
  // font of the div-text (song name) in Track list (smaller on different media queries)
  font-size: 1.3rem !important;
  font-weight: bold;
  padding: 2% 0;
}

.flex-container-tracks {
  // width: 60%;  // column with results is narrow in the center of the page
  margin: auto;
  display: flex;
  flex-wrap: wrap;
  flex-direction: column; // center all tracks in one column
  justify-content: center;
  align-content: center;
}

.flex-container-tracks li {
  margin-bottom: 15%;
  // max-width: 100%;  // column with results is narrow in the center of the page
  margin: auto;
}

.flex-container-tracks li.item-card3 {
  margin: auto auto 3%;
}

.flex-container-tracks li div {
  width: 500px;
  margin: auto;
}

.flex-container-tracks .play-button {
  margin: 8% auto 3%;
  // padding: auto 2%;
  display: block;
}

.flex-container-tracks .show-more-button {
  margin: 8% auto 3%;
}

// Adding Play-button layer (background element) - on Hover over albums & songs picture:
li .image-container {
  position: relative;
  display: inline-block;
  margin: 5% auto 0;
  &:hover {
    cursor: pointer;
  }
}

// albums and songs get additionall semi-transarent Play-icon clickable overlay
li .image-container::before {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%; // centers the play-button inside the div-element
  width: 70%;
  height: 70%; // size of the play button inside the div-element
  background-image: url("/pictures/play-button.png");
  background-size: cover; /* set picture image according to the container */
  background-position: center;
  background-repeat: no-repeat;
  opacity: 0; /* set transparency innitially to 0 */
  transition: opacity 0.3s ease; /* smooth effect change */

  /* Transformation for centering the image: */
  transform: translate(-50%, -50%);
}

li:hover .image-container::before {
  opacity: 0.8; /* bigger opacity in order to see the transparent picture */
}

li .image-container img {
  display: block; /* needed to correctly show the picture */
}

// for a single Album cover in Track list:
.image-container {
  position: relative;
  display: inline-block;
  margin: 5% auto 0;

  &:hover {
    cursor: pointer;

    &::before {
      opacity: 0.8; // Better visibility of the icon when hovered
    }
  }

  &::before {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    width: 70%;
    height: 70%;
    background-image: url("/pictures/play-button.png");
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    opacity: 0; // starting opacity
    transition: opacity 0.3s ease;
    transform: translate(-50%, -50%);
  }
}

#img-div {
  display: block;
}

// artist-result don't get the semi-transarent Play-icon (like albums and songs),
// but they get "Vew more" symbol - which opens Discography.
li .image-container-artist {
  position: relative;
  display: inline-block;
  margin: 5% auto 0;
  &:hover {
    cursor: pointer;
  }
}

li .image-container-artist::before {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%; // centers the play-button inside the div-element
  width: 70%;
  height: 70%; // size of the play button inside the div-element
  background-image: url("/pictures/magnifier2.png");
  background-size: cover; /* set picture image according to the container */
  background-position: center;
  background-repeat: no-repeat;
  opacity: 0; /* set transparency initially to 0 */
  transition: opacity 0.3s ease; /* smooth effect change */

  /* Transformation for centering the image: */
  transform: translate(-50%, -50%);
}

li:hover .image-container-artist::before {
  opacity: 0.8; /* bigger opacity in order to see the transparent picture */
}

li .image-container-artist img {
  display: block; /* needed to correctly show the picture */
}

.show-more-button {
  margin: 4% auto;
  font-size: 1.1rem;
  width: 30%;
}

.play-button {
  // margin-top: 5%;
  font-size: 1.1rem;
  width: 30%;
}

.form-player {
  width: 50%; // other flex-containers with results have width: 80%, but Audio-player & Search should be thinner
  margin: 1% auto; // centering Audio-player in the middle of the page
}

.form-player .flex-item {
  flex-basis: 40%;
}

#form-results-container {
  // width: 50%;   // usual Results have width: 80%, but in JS when Track list button is triggered, this form should become thinner
  margin: 4% auto; // centering Search-form in the middle of the page
}

.search-category {
  margin: 0% auto;
}

#form-results-container {
  display: none; // Element is hidden by default
}

#flex-search-category {
  margin-bottom: 2%;
  margin-left: 20%;
  margin-right: 20%;
}

#search-all-button {
  width: 170px;
  font-size: 1.5rem;
  &:hover {
    cursor: pointer;
  }
}

button {
  &:hover {
    cursor: pointer;
  }
}

#controls {
  display: flex;
  margin-top: 3%; // space between audio player & controls
  align-items: center;
}

#prev-button,
#next-button {
  // background-color: rgb(58, 54, 54);
  border: none;
  cursor: pointer;
  font-size: 20px; // bigger button size
  margin: 0 5%; // gap between buttons
}

#prev-icon,
#next-icon {
  width: 1.5rem;
  // height: auto;
}

#sound-gif {
  width: 13rem;
}

#sound-pic {
  width: 13rem;
}

.my-playlist-play,
.remove-button-playlist {
  margin-top: 0;
  width: 20%;
  font-size: 1.1rem;
}

.spotify-logo,
.facebook-logo,
.linkedin-logo,
.instagram-logo {
  width: 1.8rem;
  height: auto;
  text-shadow: 3px 3px 5px rgba(0, 0, 0, 0.8);
}

.spotify:hover {
  // background: -webkit-linear-gradient(#eee, #840f6a);
  color: $fontColor2;
  cursor: pointer;
  text-decoration: underline;
}

.spotify a:-webkit-any-link {
  color: $fontColor2;
  text-decoration: none;
  // background: -webkit-radial-gradient(to top left, #4dc628, #0f844a);  // too dark, not ok
  // -webkit-background-clip: text;
  // -webkit-text-fill-color: transparent;
}

.purple-hover:hover {
  color: rgb(164, 52, 84);
}

.blue-hover:hover {
  color: rgb(38, 101, 174);
}

.spotify-embed-container {
  display: block;
  // width: 80rem;
  // height: 50rem;
  margin: 1%;
}

iframe {
  width: 80rem;
  height: 15rem;
}

.last-container {
  font-size: 1rem;
  margin-bottom: 0.5rem;
}

#discography-button {
  padding: 0 5px;
  width: 50%;
}

// MEDIA QUERIES:

@media (max-width: 2200px) {
  // #prev-icon{
  //   padding-left: 15%;
  // }
  // #sound-gif {
  //   width: 11rem;
  // }
  // #sound-pic {
  //   width: 11rem;
  // }
}

.hidden-element {
  display: none;
}

#app-icon-title,
#app-icon-title2 {
  margin-top: 3%;
}

.larger-font {
  font-size: 3.4rem;
  font-weight: bold;
  margin: 0%;
  font-family: $inter;
}

@media (max-width: 2000px) {
  #sound-gif {
    width: 11rem;
  }
  #sound-pic {
    width: 11rem;
  }
  .show-more-button {
    width: 40%;
  }
  li p {
    max-width: 30%;
  }
  #discography-button {
    padding: 0 5px;
    width: 50%;
  }
}

@media (max-width: 1540px) {
  #nav-list button:last-child {
    margin-right: 150px;
  }

  h1 {
    font-size: 3.3rem;
  }

  #nav-list button {
    margin: 0 40px;
  }
  .flex-item {
    flex-basis: 50%;
    margin: 3% 5%;
  }
  a.ancor-style,
  .nav-button,
  .favorite-button,
  .remove-button,
  .submit-button,
  .show-more-button,
  .play-button,
  #search-all-button {
    font-size: 1.1rem;
    padding: 2%;
  }

  .remove-button-playlist,
  .my-playlist-play {
    font-size: 1rem;
    padding: 0%;
    max-width: 20%;
  }

  // }
  #empty {
    display: none;
  }

  // search results:

  .li-item-style {
    margin-bottom: 10%;
  }

  .flex-container-ol {
    flex-direction: row;
    gap: 30px;
  }

  .flex-container-ol .result-flex-item {
    flex-basis: 45% !important;
  }

  .result-image {
    width: 200px;
    height: 200px;
  }
  .result-category {
    font-size: 1.8rem;
  }
  .li-item-style {
    margin-bottom: 0%;
    padding-bottom: 1%;
  }
  .last-container {
    font-size: 0.8rem;
  }
  #discography-button {
    padding: 0 5px;
    width: 50%;
  }
}

@media (max-width: 1150px) {
  #nav-list button {
    margin: 0 20px;
  }
  .flex-item {
    flex-basis: 30%;
    margin: 1% auto;
  }

  h3 {
    font-size: 1.9rem;
    padding: 0%;
  }
  #empty {
    display: none;
  }
  .show-more-button {
    margin: 4% auto 8%;
  }
  #flex-search-category {
    margin-left: 10%;
    margin-right: 10%;
  }
  .larger-font {
    font-size: 2.8rem;
  }
}

@media (max-width: 1113px) {
  #nav-list button {
    width: 15%;
  }
  .remove-button-playlist,
  .my-playlist-play {
    font-size: 0.9rem;
    padding: 0%;
    max-width: 20%;
  }
}

@media (max-width: 1056px) {
  body {
    font-size: 1rem;
  }
  li {
    flex-basis: 90%;
  }
  li p {
    padding: 2% 0;
  }

  .flex-item {
    flex-basis: 30%;
    margin: 1% auto;
  }

  .result-item-name {
    font-size: 1.1rem !important;
  }
  .li-item-style {
    margin-bottom: 0%;
    padding-bottom: 1%;
  }
  .result-flex-item div {
    font-size: 1rem !important;
  }
}

@media (max-width: 989px) {
  #nav-title {
    font-size: 1.4rem;
  }
  .result-flex-item div {
    font-size: 1rem !important;
  }
}

/* so that 'Rate (1-10)' doesn't break in 2 rows */
@media (max-width: 956px) {
  body {
    font-size: 1rem;
  }
  #review {
    width: 6rem;
  }
  #nav-list button,
  select {
    width: 10rem;
    height: 3rem;
  }

  a.ancor-style,
  .nav-button,
  .favorite-button,
  .remove-button,
  .submit-button,
  .show-more-button,
  .play-button,
  #search-all-button {
    font-size: 1rem;
  }
  .result-flex-item div {
    font-size: 1rem !important;
  }
  .remove-button-playlist,
  .my-playlist-play {
    font-size: 0.8rem;
    padding: 0%;
    max-width: 20%;
  }
}

@media (max-width: 908px) {
  .red {
    height: 130px;
  }
  #nav-title {
    font-size: 1.4rem;
  }

  #nav-list button {
    margin: 5px 15px;
  }
  .result-flex-item div {
    font-size: 1rem !important;
  }
}

@media (max-width: 889px) {
  .red {
    height: 150px;
  }
}

@media (max-width: 880px) {
  #nav-list button:last-child {
    margin-right: 15px;
  }

  #nav-list button,
  select {
    margin: 0 15px;
  }

  #nav-list button {
    margin: 5px 15px;
  }

  #nav-title {
    font-size: 1.4rem;
  }

  h1 {
    font-size: 3.1rem;
  }

  h3 {
    font-size: 1.3rem;
    padding: 1%;
  }
  .result-flex-item div {
    font-size: 1rem !important;
  }
  .larger-font {
    font-size: 2.5rem;
  }
}

@media (max-width: 840px) {
  .dropdown-menu {
    top: 115px;
  }

  #nav-title {
    font-size: 1.2rem;
    flex-basis: 10%;
  }

  .remove-button {
    margin: 3%;
  }
  h1 {
    font-size: 2.9rem;
  }

  h3 {
    font-size: 1.5rem;
  }
  #search-all-input {
    width: 90% !important;
  }
  .result-flex-item div {
    font-size: 1rem !important;
  }
  .larger-font {
    font-size: 2rem;
  }
}

@media (max-width: 786px) {
  body {
    font-size: 1rem;
  }

  .red {
    height: 180px;
  }

  .flex-item {
    flex-basis: 70%;
  }

  .flex-container {
    height: 45%;
    width: 85%;
    margin: 2% auto;
    align-content: center;
    flex-wrap: wrap;
  }

  .item-fill {
    flex-basis: 70%;
    margin: 3% auto;
  }

  .item-fill2 {
    flex-basis: 70%;
    margin: 3% auto;
  }

  .item-fill3 {
    flex-basis: 30%;
    margin: 3% auto;
  }

  h1 {
    font-size: 2.5rem;
  }

  h3 {
    font-size: 1.4rem;
    padding: 1%;
  }

  select {
    width: 10rem;
  }

  #navbar {
    width: 100%;
  }

  button,
  input,
  .favorite-button,
  .remove-button {
    width: 50%;
  }
  #player-add-to-playlist {
    width: 13rem;
  }

  .show-more-button {
    width: 70%;
  }
  #discography-button {
    padding: 0 5px;
    width: 70%;
  }

  button {
    margin-top: 5%;
    padding: 0%;
  }

  .remove-button {
    margin: 3%;
  }

  li p {
    padding: 2%;
    display: block;
  }

  #first-container {
    margin-bottom: 15%;
  }

  #empty {
    display: none;
  }

  #nav-list {
    text-align: center;
  }
  #nav-list button {
    width: 7rem;
  }

  .dropdown-menu {
    top: 150px;
  }

  h3 {
    font-size: 1.3rem;
    padding: 1%;
  }
  a.ancor-style,
  .nav-button,
  .favorite-button,
  .remove-button,
  .submit-button,
  .show-more-button,
  .play-button,
  #search-all-button {
    font-size: 1.1rem;
  }
  .favorite-button {
    margin-top: 5%;
  }
  .remove-button,
  .submit-button {
    margin-bottom: 5%;
  }

  .input-button {
    margin-bottom: 5%;
  }

  .flex-container-tracks li div {
    width: 350px;
    margin: auto;
  }
  .result-item-name {
    font-size: 1rem !important;
  }
  .result-flex-item div {
    font-size: 1rem !important;
  }

  #first-input,
  #second-input,
  #third-input {
    width: 44px;
  }

  input[type="checkbox"] {
    transform: scale(0.5); // makes checkbox bigger
  }
  .result-category {
    font-size: 1.5rem;
  }
  #flex-search-category {
    margin-left: 12%;
    margin-right: 12%;
  }
  .remove-button-playlist,
  .my-playlist-play {
    font-size: 0.8rem;
    padding-top: 1%;
    padding-bottom: 1%;
    max-width: 95%;
  }
  .remove-button-playlist {
    margin-top: 7%;
  }
  .item-card2 {
    // gap: 7%;
    flex-direction: column;
  }
  .last-container {
    font-size: 0.7rem;
  }
  .nav-button {
    font-size: 1rem;
  }
  #form-results-container {
    width: 80% !important;
  }
}

@media (max-width: 570px) {
  .red {
    height: 300px;
  }
  #discography-button {
    padding: 0 5px;
    width: 80%;
  }
  #form-results-container {
    width: 85% !important;
  }
}

@media (max-width: 512px) {
  .red {
    height: 200px;
  }

  h1 {
    font-size: 2.2rem;
  }

  h3 {
    font-size: 1.2rem;
    padding: 1%;
  }

  audio {
    width: 220px;
    height: 35px;
  }

  .flex-container-tracks li div {
    width: 250px;
    margin: auto;
  }
  .result-category {
    font-size: 1.3rem;
  }

  .flex-container-tracks .play-button {
    width: 130px;
  }

  .flex-container-tracks .show-more-button {
    width: 130px;
  }

  .result-image {
    width: 150px;
    height: 150px;
  }

  #search-all-input {
    width: 90% !important;
  }

  #search-all-button {
    width: 90% !important;
  }

  #search-form {
    width: 85%;
  }
  .remove-button-playlist,
  .my-playlist-play {
    font-size: 0.7rem;
    padding-left: 2%;
    padding-right: 2%;
    padding-top: 1%;
    padding-bottom: 1%;
    width: 60%;
  }
  #discography-button {
    padding: 0 5px;
    width: 90%;
  }

  a.ancor-style,
  .nav-button,
  .favorite-button,
  .remove-button,
  .submit-button,
  .show-more-button,
  .play-button,
  #search-all-button {
    font-size: 0.9rem;
    // padding: 1%;
  }
  .main-title {
    margin-left: 20px;
    margin-right: 21px;
  }
}

@media (max-width: 389px) {
  // Iphone SE: 375 X 667
  .red {
    height: 300px;
  }
  // a.ancor-style {
  //   font-size: 1rem;
  // }

  .flex-container-tracks li div {
    width: 150px;
  }

  #player-add-to-playlist {
    width: 9rem;
  }
  #flex-search-category {
    margin-left: 5%;
    margin-right: 5%;
  }
  .remove-button-playlist,
  .my-playlist-play {
    font-size: 0.7rem;
    padding-left: 2%;
    padding-right: 2%;
    padding-top: 1%;
    padding-bottom: 1%;
    width: 60%;
  }
  iframe {
    width: 15rem;
    height: 15rem;
  }
  h1 {
    font-size: 2rem;
  }
}

// @media (max-width: 360px) {
//    .red {
//     height: 200px;
//   }
// }
